{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "modules": {
          "tracker": {
            "settings": {
              "image": "$ACR_NAME_RTPT/$TRACKER_CONTAINER_IMAGE_NAME:$TRACKER_CONTAINER_IMAGE_TAG",
              "createOptions": {
                "HostConfig": {
                  "IpcMode": "host",
                  "Binds": [
                    "/tmp/.X11-unix:/tmp/.X11-unix",
                    "/tmp/video:/tmp/video"
                  ],
                  "Runtime": "nvidia",
                  "ShmSize": 536870912,
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "100m",
                      "max-file": "2000"
                    }
                  }
                }
              }
            },
            "type": "docker",
            "env": {
              "EULA": {
                "value": "accept"
              },
              "DISPLAY": {
                "value": "$DISPLAY"
              },
              "QT_X11_NO_MITSHM": {
                "value": "1"
              },
              "ARCHON_PERF_MARKER": {
                "value": "$ARCHON_PERF_MARKER"
              },
              "ARCHON_LOG_LEVEL": {
                "value": "$ARCHON_LOG_LEVEL"
              },
              "ARCHON_TELEMETRY_IOTHUB": {
                "value": "true"
              },
              "ARCHON_SHARED_BUFFER_LIMIT": {
                "value": "377487360"
              },
              "OMP_WAIT_POLICY": {
                "value": "PASSIVE"
              }
            },
            "status": "running",
            "restartPolicy": "always",
            "version": "1.0"
          },
          "telegraf": {
            "settings": {
              "image": "$ACR_NAME_RTPT/$TELEGRAF_CONTAINER_IMAGE_NAME:$TELEGRAF_CONTAINER_IMAGE_TAG",
              "createOptions": {
                "HostConfig": {
                  "Runtime": "nvidia",
                  "NetworkMode": "azure-iot-edge",
                  "Memory": 33554432,
                  "Binds": [
                    "/var/run/docker.sock:/var/run/docker.sock"
                  ]
                }
              }
            },
            "type": "docker",
            "env": {
              "AZURE_TENANT_ID": {
                "value": "$TELEGRAF_AZURE_TENANT_ID"
              },
              "AZURE_CLIENT_ID": {
                "value": "$TELEGRAF_AZURE_CLIENT_ID"
              },
              "AZURE_CLIENT_SECRET": {
                "value": "$TELEGRAF_AZURE_CLIENT_SECRET"
              },
              "rtcvmodule": {
                "value": "tracker"
              },
              "region": {
                "value": "$IOT_REGION"
              },
              "resource_id": {
                "value": "$IOT_RESOURCE_ID"
              },
              "interval": {
                "value": "$TELEGRAF_INTERVAL"
              },
              "input_taginclude": {
                "value": "\"container_name\", \"engine_host\""
              },
              "input_fieldpass": {
                "value": "\"usage_*\", \"usage\", \"rx_bytes\", \"tx_bytes\""
              },
              "NVIDIA_VISIBLE_DEVICES": {
                "value": "all"
              },
              "NVIDIA_DRIVER_CAPABILITIES": {
                "value": "utility"
              }
            },
            "status": "running",
            "restartPolicy": "always",
            "version": "1.0"
          },
          "localblobstorage": {
            "settings": {
              "image": "mcr.microsoft.com/$LBS_CONTAINER_IMAGE_NAME:$LBS_CONTAINER_IMAGE_TAG",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "$LBS_BLOB_FOLDER:/blobroot"
                  ],
                  "PortBindings": {
                    "11002/tcp": [
                      {
                        "HostPort": "11002"
                      }
                    ]
                  }
                }
              }
            },
            "type": "docker",
            "env": {
              "LOCAL_STORAGE_ACCOUNT_NAME": {
                "value": "$LBS_ACCOUNT_NAME"
              },
              "LOCAL_STORAGE_ACCOUNT_KEY": {
                "value": "$LBS_ACCOUNT_KEY"
              }
            },
            "status": "running",
            "restartPolicy": "always",
            "version": "1.0"
          },
          "penginelogs": {
            "settings": {
              "image": "$ACR_NAME_RTPT/$LOG_CONTAINER_IMAGE_NAME:$LOG_CONTAINER_IMAGE_TAG",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "/var/run/docker.sock:/var/run/docker.sock",
                    "/usr/bin/docker:/usr/bin/docker"
                  ],
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "500m"
                    }
                  }
                }
              }
            },
            "type": "docker",
            "env": {
              "LOGANALYTICS_WORKSPACE_ID": {
                "value": "$LOGANALYTICS_WORKSPACE_ID"
              },
              "LOGANALYTICS_SHAREDKEY": {
                "value": "$LOGANALYTICS_SHAREDKEY"
              },
              "IOTEDGE_WORKLOADURI": {
                "value": "fd://iotedge.socket"
              },
              "ARCHON_LOG_LEVEL": {
                "value": "$ARCHON_LOG_LEVEL"
              }
            },
            "status": "running",
            "restartPolicy": "always",
            "version": "1.0"
          },
          "camerastream": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.CameraStream}",
              "createOptions": {
                "ExposedPorts": {
                  "56780/tcp": {}
                },
                "HostConfig": {
                  "Binds": [
                    "/tmp/video:/tmp/video"
                  ],
                  "PortBindings": {
                    "56780/tcp": [
                      {
                        "HostPort": "56780"
                      }
                    ]
                  }
                }
              }
            }
          },
          "rtspserver": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.RTSPServer}",
              "createOptions": {
                "Cmd": ["./RTSPServer/build/rtspserver $STREAM_WITH_RTSP"],
                "HostConfig": {
                  "IpcMode": "host",
                  "Binds": [
                    "/tmp/video:/tmp/video"
                  ]
                }
              }
            }
          },
          "rtspsim": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/lva-utilities/rtspsim-live555:1.2",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "/tmp/video:/live/mediaServer/media"
                  ]
                }
              }
            }
          },
          "lvaEdge": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/media/live-video-analytics:1",
              "createOptions": {
                "HostConfig": {
                  "LogConfig": {
                    "Type": "",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "10"
                    }
                  },
                  "Binds": [
                    "$OUTPUT_VIDEO_FOLDER_ON_DEVICE:/var/media/",
                    "$APPDATA_FOLDER_ON_DEVICE:/var/lib/azuremediaservices"
                  ]
                }
              }
            }
          },
          "detector": {
            "version": "1.0",
            "type": "docker",
            "env": {
              "DISPLAY": {
                "value": "$DISPLAY"
              },
              "QT_X11_NO_MITSHM": {
                "value": "1"
              }
            },
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.Detector}",
              "createOptions": {
                "ExposedPorts": {
                  "5010/tcp": {}
                },
                "HostConfig": {
                  "IpcMode": "host",
                  "Binds": [
                    "/tmp/.X11-unix:/tmp/.X11-unix",
                    "/tmp/video:/tmp/video"
                  ],
                  "Runtime": "nvidia",
                  "ShmSize": 536870912,
                  "PortBindings": {
                    "5010/tcp": [
                      {
                        "HostPort": "5010"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "runtime": {
          "settings": {
            "minDockerVersion": "v1.25",
            "registryCredentials": {
              "rtptofficial": {
                "address": "$ACR_NAME_RTPT",
                "password": "$ACR_PASSWORD_RTPT",
                "username": "$ACR_USERNAME_RTPT"
              }
            }
          },
          "type": "docker"
        },
        "schemaVersion": "1.0",
        "systemModules": {
          "edgeAgent": {
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
              "createOptions": ""
            },
            "type": "docker"
          },
          "edgeHub": {
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ],
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ]
                  }
                }
              }
            },
            "type": "docker",
            "status": "running",
            "restartPolicy": "always"
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "routes": {
          "AllToHub": "FROM /messages/* INTO $upstream"
        },
        "schemaVersion": "1.0",
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "tracker": {
      "properties.desired": {
        "globalSettings": {
          "PlatformTelemetryEnabled": true,
          "CustomerTelemetryEnabled": true
        },
        "graphs": {
          "CrossingZones": {
            "skillId": "Microsoft.ComputerVision.PersonCrossingPolygon",
            "version": 1,
            "enabled": true,
            "parameters": {
              "VIDEO_URL": "$CROSSING_VIDEO_URL",
              "VIDEO_SOURCE_ID": "test_rtsp",
              "VIDEO_IS_LIVE": "$LIVE_CAMERAS",
              "DETECTOR_NODE_CONFIG": "{ \"gpu_index\": 0 }",
              "TRACKER_NODE_CONFIG": "{ \"gpu_index\": 0 }",
              "VISUALIZER_NODE_CONFIG": "{ \"show_debug_video\": false }",
              "SPACEANALYTICS_CONFIG": "{\"zones\":[{\"name\":\"queue\",\"polygon\":$VIDEO_ZONE,\"threshold\":10.0}]}"
            }
          },
          "PeopleCount": {
            "skillId": "Microsoft.ComputerVision.PersonCount",
            "version": 1,
            "enabled": true,
            "parameters": {
              "VIDEO_URL": "$CROSSING_VIDEO_URL",
              "VIDEO_SOURCE_ID": "test_rtsp",
              "VIDEO_IS_LIVE": "$LIVE_CAMERAS",
              "DETECTOR_NODE_CONFIG": "{ \"gpu_index\": 0 }",
              "TRACKER_NODE_CONFIG": "{ \"gpu_index\": 0 }",
              "VISUALIZER_NODE_CONFIG": "{ \"show_debug_video\": false }",
              "SPACEANALYTICS_CONFIG": "{\"zones\":[{\"name\":\"queue\",\"polygon\": $VIDEO_ZONE, \"events\": [{\"type\":\"count\", \"config\": {\"trigger\": \"event\"}}], \"threshold\":10.0}]}"
            }
          }
        }
      }
    },
    "localblobstorage": {
      "properties.desired": {
        "deviceAutoDeleteProperties": {
          "deleteOn": "$LBS_DELETE_ON",
          "deleteAfterMinutes": "$LBS_DELETE_AFTER_MINUTES"
        },
        "deviceToCloudUploadProperties": {
          "uploadOn": false
        }
      }
    },
    "penginelogs": {
      "properties.desired": {}
    },
    "camerastream": {
      "properties.desired": {
        "blob": "$CAMERA_BLOB_SAS",
        "cameras": {
          "cam001": {
            "space": "Office",
            "rtsp": "$CROSSING_VIDEO_URL",
            "detector": "$PEOPLE_DETECTOR",
            "inference": true,
            "interval": "$UPLOAD_FREQ_SEC",
            "enabled": true,
            "gpu": true
          }
        }
      }
    },
    "lvaEdge": {
      "properties.desired": {
        "applicationDataDirectory": "/var/lib/azuremediaservices",
        "azureMediaServicesArmId": "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/microsoft.media/mediaservices/$AMS_ACCOUNT",
        "aadTenantId": "$AAD_TENANT_ID",
        "aadServicePrincipalAppId": "$AAD_SERVICE_PRINCIPAL_ID",
        "aadServicePrincipalSecret": "$AAD_SERVICE_PRINCIPAL_SECRET",
        "aadEndpoint": "https://login.microsoftonline.com",
        "aadResourceId": "https://management.core.windows.net/",
        "armEndpoint": "https://management.azure.com/",
        "diagnosticsEventsOutputName": "AmsDiagnostics",
        "operationalEventsOutputName": "AmsOperational",
        "logLevel": "Information",
        "logCategories": "Application,Events",
        "allowUnsecuredEndpoints": true,
        "telemetryOptOut": false
      }
    }

  }
}